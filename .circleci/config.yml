version: 2
jobs:
  tests:
    docker:
      # Primary docker container where the tests will be run
      - image: ubuntu:20.04

      # Secondary docker container for database service
      - image: postgres:12.4
        environment:
          POSTGRES_USER: circleci
          POSTGRES_PASSWORD: not_secure

    working_directory: ~/connectivity-search-backend

    steps:
      - checkout
      - run:
          name: OS update
          command: |
            apt update && apt upgrade --yes
      - run:
          name: Set up Postgres
          command: |
            apt install postgresql-client --yes
            createdb --host=localhost --username=circleci circleci_test
            cp .circleci/ci_secrets.yml dj_hetmech/secrets.yml
      - run:
          name: Install miniconda
          working_directory: ~/
          command: |
            apt install git wget --yes
            wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh --output-document miniconda.sh
            bash miniconda.sh -b -p $HOME/miniconda
            source $HOME/miniconda/etc/profile.d/conda.sh
            # gcc is required for "pip install git+https://..."
            apt install gcc --yes
            conda env create --quiet --file ~/connectivity-search-backend/environment.yml
            echo "source $HOME/miniconda/etc/profile.d/conda.sh" >> $BASH_ENV
            echo "conda activate hetmech-backend" >> $BASH_ENV
      - run:
          name: Backend tests
          command: |
            python manage.py makemigrations dj_hetmech_app
            python manage.py migrate
            python manage.py test

  deploy:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a5:38:b8:18:7c:68:fc:9d:75:82:e7:2c:f4:04:1c:7e"
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST "bash ~/connectivity-search-backend/.circleci/deploy.sh"

workflows:
  version: 2
  test:
    jobs:
      - tests
      - deploy:
          requires:
            - tests
          filters:
            branches:
              only: main
